name: Deploy

on:
  push:
    branches:
    - main
    - develop

env:
  nameFunction: 'fs-srv-autorization'
  nameTableDynamodbCache : ''
  nameTableDynamodbTags : ''
  region: us-east-1
  secretName: 'test/abcdin/tokenizacion_apikey'
  keySecret: 'superSecreto'


jobs:
  deploy_lambda:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: npm install
        env:
          CI: true
        run: |
          npm install crypto
      - name: deploy
        run: |
          zip -j deploy.zip * 
          aws lambda update-function-code \
            --function-name=${nameFunction} \
            --zip-file=fileb://deploy.zip
          
  set_variable:
    needs: [deploy_lambda] 
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 
      - name: configure variables
        run:  |
          aws lambda update-function-configuration \
            --function-name=${nameFunction} \
            --environment "Variables={secretName=${secretName},region=${region},keysecret=${keySecret}}"

